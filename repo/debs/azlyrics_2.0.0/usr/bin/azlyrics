#! /bin/bash

# TODO LIST

#checks if user is mobile
if [ "$(whoami)" == "mobile" ]
then
	activator send libactivator.system.vibrate
	#removes / so it doesnt screw up filepaths
	pathtitle=$(media title | sed 's/\// /g')
	pathartist=$(media artist | sed 's/\// /g')
	#actual names
	artist=$(media artist)
	title=$(media title)
	mkdir -p "/User/Media/Lyrics/"
	touch /User/Media/Lyrics/errorlog.txt
	#sets correct permissions
	if [ "$(stat -c %a /User/Media/Lyrics/errorlog.txt)" != "666" ]
	then
		chmod 666 /User/Media/Lyrics/errorlog.txt
	fi
	#checks if lyrics were not already fetched and saved
	if [ ! -f "/User/Media/Lyrics/$pathtitle/$pathartist.txt" ]
	then
		#checks if specfic artists and corrects them to the way they show up in azlyrics database. webartist id for the URL and artist is for the way it displays it on the page
		if [ "$artist" == "Electric Light Orchestra" ]
		then
			webartist="electriclightorchestraelo"
			artist="Electric Light Orchestra (ELO)"
		elif [ "$artist" == "Bob Marley & The Wailers" ]
		then
			webartist="bobmarley"
			artist="Bob Marley"
		else
			webartist=$(echo "$artist" | sed -r 's/^The|'\''|,|\.|\?|&|\+| |\/|-//g;s/.*/\L&/g')
		fi
		if [ "$title" == "The House Of The Rising Sun" ]
		then
			webtitle="houseoftherisingsun"
			title="House Of The Rising Sun"
		else
			#removes a lot of the jank from titles like remastered soundtrack version and punctuation for URL
			webtitle=$(echo "$title" | sed -r 's/|-.*Remaster.*|-.*Live.*|-.*feat.*|-.*Version.*|\(.*Remaster.*\)|\(.*feat.*\)|\(|\)|LP|'\''| |\.|,|\?|&|\/|\+|\[.*\]|\[|\]|-//g;s/.*/\L&/g')
		fi		
		#write output of page to temporary file
		lynx --dump http://www.azlyrics.com/lyrics/$webartist/$webtitle.html >/User/Media/Lyrics/lyrics.tmp		
		#checks if actual lyrics were returned
		if [ "$(cat /User/Media/Lyrics/lyrics.tmp | grep "Welcome to AZLyrics" | sed 's/ //g')" == "WelcometoAZLyrics!" ]
		then	
			#checks if song is playing
			if [ "$artist" == "(null)" ] ||  [ "$title" == "(null)" ]
			then
				stb -b "com.apple.Preferences" -t "Error" -s "" -m "No song is currently playing"
			else
				#no lyrics found. output an error
				stb -b "$(media bunID)" -t "$title" -s "$artist" -m "$(echo -e "\nNo lyrics were found. Please email moshedancykier@gmail.com with the file errorlog.txt (located in /User/Media/Lyrics) as an attachment.")"
				#writes to log (error 1) if song not already present in log from previous error
				if [ "$(cat /User/Media/Lyrics/errorlog.txt | grep -c "$title - $artist (1)")"  -eq 0 ]
				then
					echo -e "$title - $artist (1)\t\t$(date "+%Y.%m.%d %R")">>/User/Media/Lyrics/errorlog.txt
				fi
			fi
			rm /User/Media/Lyrics/lyrics.tmp
			exit
		else
			mkdir -p "/User/Media/Lyrics/$pathartist"
			#removes everything except actual lyrics writes to file for all future lyrics requests 
			start=$(cat /User/Media/Lyrics/lyrics.tmp | grep -n "$(echo "$artist" | sed 's/^The //;s/.*/\U&/') LYRICS" | sed -r 's/:.*//')
			end=$(cat /User/Media/Lyrics/lyrics.tmp | grep -n "Submit Corrections" | sed 's/:.*//')
			cat /User/Media/Lyrics/lyrics.tmp | sed "1,$(expr $start + 2)d;$end,999d;s/^   //g;s/[^][0-9a-zA-Z :;\'"\""?,\.\!\&\$+()-]/ /g" | sed '1s/^/\n/'>"/User/Media/Lyrics/$pathartist/$pathtitle.txt"
		fi
	fi
	if [ -f "/User/Media/Lyrics/$pathartist/$pathtitle.txt" ]
	then
		#checks if file is not blank due to an error
		if [ "$(cat "/User/Media/Lyrics/$pathartist/$pathtitle.txt")" != "" ]
		then
			#outputs the lyrics
			stb -b "$(media bunID)" -t "$title" -s "$artist" -m "$(cat "/User/Media/Lyrics/$pathartist/$pathtitle.txt")"
		else 
			# if the file is blank deletes lyrics file
			rm "/User/Media/Lyrics/$artist/$title.txt"
			#if artist folder has no other songs in it deletes the entire folder
			if [ "$(ls -A "/private/var/mobile/Media/Lyrics/$pathartist")" == "" ]
			then
				rm -r "/private/var/mobile/Media/Lyrics/$pathartist"
			fi
			stb -b "com.apple.Preferences" -t "Error" -s "" -m "$(echo -e "There was an error in the script and the lyrics file for \n\n$title\nby\n$artist\n\nwas blank, and the file has been deleted. Please re-run the script, and if the issue persists email moshedancykier@gmail.com with the errorlog.txt file (located in /User/Media/Lyrics) as an attachment.")"
			#writes to log (error 2) if song not already present in log from previous error
			if [ "$(cat /User/Media/Lyrics/errorlog.txt | grep -c "$title - $artist (2)")"  -eq 0 ]
			then
				echo -e "$title - $artist (2)\t\t$(date "+%Y.%m.%d %R")">>/User/Media/Lyrics/errorlog.txt
			fi
		fi
	fi
	rm /User/Media/Lyrics/lyrics.tmp
#if user is root script wont run (SSHMediaControls needs to be run as mobile im not sure why)
else
	stb -b "com.apple.Preferences" -t "Error" -s "" -m "Cant be run as root"
fi 